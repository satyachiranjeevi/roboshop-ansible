- name: install shipping service
  hosts: shipping
  become: yes
  tasks:
  - name: install maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: user add
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  
  - when: output.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user:
      name: roboshop

  - name: check /app exists
    ansible.builtin.stat:
      path: /app
    register: directory

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: dowload shipping zip
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp
  
  - name: extract shipping artifacts file
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes


  - name: clean package and change directory
    ansible.builtin.command: mvn clean package
    args:
      chdr: /app
  
  - name: jar files
    ansbile.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdr: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: reload daemon 
    ansible.builtin.systemd:
      daemon_reload: true
  
  - name: start & enable shipping service
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  - name: install mysql
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load schema
    ansible.builtin.command: mysql -h mysql.devopsbysatya.online -uroot -pRoboShop@1 < /app/schema/shipping.sql

  - name: start & enable shipping service
    ansible.builtin.service:
      name: shipping
      state: restarted

  