--- # start of the yaml
- name: install user service on linux server
  hosts: user
  become: yes
  tasks:
  - name: download nodejs repos
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: install node js
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: user add
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  
  - when: output.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user:
      name: roboshop

  - name: check if app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download user artifacts
    ansible.builtin.get_url: 
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: extract user artifacts file
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: change directory and install npm packages
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: reload daemon 
    ansible.builtin.systemd:
      daemon_reload: true

  - name: copy mongo.repo to yum.repos.d
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb shell
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: load cart data /  schema
    ansible.builtin.command: mongo --host mongodb.devopsbysatya.online < /app/schema/user.js

  - name: start & enable user service
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes
... # end of the yaml